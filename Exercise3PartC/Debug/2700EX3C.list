
2700EX3C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000388  08000390  00001390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000388  08000388  00001390  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000388  08000388  00001390  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000388  08000390  00001390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000388  08000388  00001388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800038c  0800038c  0000138c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001390  2**0
                  CONTENTS
 10 .bss          00000024  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000024  20000024  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001390  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000be1  00000000  00000000  000013c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000291  00000000  00000000  00001fa1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00002238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000053  00000000  00000000  000022b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00014d7e  00000000  00000000  0000230b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000a6e  00000000  00000000  00017089  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000726db  00000000  00000000  00017af7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0008a1d2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000f4  00000000  00000000  0008a218  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005e  00000000  00000000  0008a30c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000370 	.word	0x08000370

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000370 	.word	0x08000370

080001d4 <main>:
#include "stm32f303xc.h"

int main(void) {
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
    // Setup PE9
    RCC->AHBENR |= RCC_AHBENR_GPIOEEN;
 80001d8:	4b24      	ldr	r3, [pc, #144]	@ (800026c <main+0x98>)
 80001da:	695b      	ldr	r3, [r3, #20]
 80001dc:	4a23      	ldr	r2, [pc, #140]	@ (800026c <main+0x98>)
 80001de:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80001e2:	6153      	str	r3, [r2, #20]
    GPIOE->MODER &= ~(3 << (2 * 9)); // Clear mode bits
 80001e4:	4b22      	ldr	r3, [pc, #136]	@ (8000270 <main+0x9c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a21      	ldr	r2, [pc, #132]	@ (8000270 <main+0x9c>)
 80001ea:	f423 2340 	bic.w	r3, r3, #786432	@ 0xc0000
 80001ee:	6013      	str	r3, [r2, #0]
    GPIOE->MODER |=  (1 << (2 * 9)); // Set as output
 80001f0:	4b1f      	ldr	r3, [pc, #124]	@ (8000270 <main+0x9c>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a1e      	ldr	r2, [pc, #120]	@ (8000270 <main+0x9c>)
 80001f6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80001fa:	6013      	str	r3, [r2, #0]
    GPIOE->ODR &= ~(1 << 9);         // PE9 OFF initially
 80001fc:	4b1c      	ldr	r3, [pc, #112]	@ (8000270 <main+0x9c>)
 80001fe:	695b      	ldr	r3, [r3, #20]
 8000200:	4a1b      	ldr	r2, [pc, #108]	@ (8000270 <main+0x9c>)
 8000202:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000206:	6153      	str	r3, [r2, #20]

    // Setup TIM2
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000208:	4b18      	ldr	r3, [pc, #96]	@ (800026c <main+0x98>)
 800020a:	69db      	ldr	r3, [r3, #28]
 800020c:	4a17      	ldr	r2, [pc, #92]	@ (800026c <main+0x98>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	61d3      	str	r3, [r2, #28]

    TIM2->PSC = 8000 - 1;   // 1 ms per tick (assuming 8 MHz)
 8000214:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000218:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 800021c:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = 0xFFFF;
 800021e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000222:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000226:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM2->CNT = 0;
 8000228:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800022c:	2200      	movs	r2, #0
 800022e:	625a      	str	r2, [r3, #36]	@ 0x24

    TIM2->EGR |= TIM_EGR_UG;   // Force update
 8000230:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000234:	695b      	ldr	r3, [r3, #20]
 8000236:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800023a:	f043 0301 	orr.w	r3, r3, #1
 800023e:	6153      	str	r3, [r2, #20]
    TIM2->CR1 |= TIM_CR1_CEN;  // Start timer
 8000240:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800024a:	f043 0301 	orr.w	r3, r3, #1
 800024e:	6013      	str	r3, [r2, #0]

    while (1) {
        if (TIM2->CNT > 7000) {
 8000250:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000254:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000256:	f641 3258 	movw	r2, #7000	@ 0x1b58
 800025a:	4293      	cmp	r3, r2
 800025c:	d9f8      	bls.n	8000250 <main+0x7c>
            GPIOE->ODR |= (1 << 9);  // Turn on PE9
 800025e:	4b04      	ldr	r3, [pc, #16]	@ (8000270 <main+0x9c>)
 8000260:	695b      	ldr	r3, [r3, #20]
 8000262:	4a03      	ldr	r2, [pc, #12]	@ (8000270 <main+0x9c>)
 8000264:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000268:	6153      	str	r3, [r2, #20]
        if (TIM2->CNT > 7000) {
 800026a:	e7f1      	b.n	8000250 <main+0x7c>
 800026c:	40021000 	.word	0x40021000
 8000270:	48001000 	.word	0x48001000

08000274 <TIM2_IRQHandler>:
    // Enable TIM2 interrupt in NVIC
    NVIC_SetPriority(TIM2_IRQn, 1);
    NVIC_EnableIRQ(TIM2_IRQn);
}

void TIM2_IRQHandler(void) {
 8000274:	b580      	push	{r7, lr}
 8000276:	af00      	add	r7, sp, #0
    if (TIM2->SR & TIM_SR_UIF) {
 8000278:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800027c:	691b      	ldr	r3, [r3, #16]
 800027e:	f003 0301 	and.w	r3, r3, #1
 8000282:	2b00      	cmp	r3, #0
 8000284:	d020      	beq.n	80002c8 <TIM2_IRQHandler+0x54>
        TIM2->SR &= ~TIM_SR_UIF;   // Clear interrupt flag
 8000286:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800028a:	691b      	ldr	r3, [r3, #16]
 800028c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000290:	f023 0301 	bic.w	r3, r3, #1
 8000294:	6113      	str	r3, [r2, #16]

        if (oneshot_active) {
 8000296:	4b0d      	ldr	r3, [pc, #52]	@ (80002cc <TIM2_IRQHandler+0x58>)
 8000298:	781b      	ldrb	r3, [r3, #0]
 800029a:	2b00      	cmp	r3, #0
 800029c:	d014      	beq.n	80002c8 <TIM2_IRQHandler+0x54>
            oneshot_active = 0;
 800029e:	4b0b      	ldr	r3, [pc, #44]	@ (80002cc <TIM2_IRQHandler+0x58>)
 80002a0:	2200      	movs	r2, #0
 80002a2:	701a      	strb	r2, [r3, #0]
            TIM2->CR1 &= ~TIM_CR1_CEN;  // Stop timer
 80002a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80002ae:	f023 0301 	bic.w	r3, r3, #1
 80002b2:	6013      	str	r3, [r2, #0]

            if (oneshot_callback) {
 80002b4:	4b06      	ldr	r3, [pc, #24]	@ (80002d0 <TIM2_IRQHandler+0x5c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d005      	beq.n	80002c8 <TIM2_IRQHandler+0x54>
                oneshot_callback();
 80002bc:	4b04      	ldr	r3, [pc, #16]	@ (80002d0 <TIM2_IRQHandler+0x5c>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4798      	blx	r3
                oneshot_callback = 0;
 80002c2:	4b03      	ldr	r3, [pc, #12]	@ (80002d0 <TIM2_IRQHandler+0x5c>)
 80002c4:	2200      	movs	r2, #0
 80002c6:	601a      	str	r2, [r3, #0]
            }
        }
    }
}
 80002c8:	bf00      	nop
 80002ca:	bd80      	pop	{r7, pc}
 80002cc:	20000020 	.word	0x20000020
 80002d0:	2000001c 	.word	0x2000001c

080002d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d4:	480d      	ldr	r0, [pc, #52]	@ (800030c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002dc:	480c      	ldr	r0, [pc, #48]	@ (8000310 <LoopForever+0x6>)
  ldr r1, =_edata
 80002de:	490d      	ldr	r1, [pc, #52]	@ (8000314 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000318 <LoopForever+0xe>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e4:	e002      	b.n	80002ec <LoopCopyDataInit>

080002e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ea:	3304      	adds	r3, #4

080002ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f0:	d3f9      	bcc.n	80002e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002f2:	4a0a      	ldr	r2, [pc, #40]	@ (800031c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000320 <LoopForever+0x16>)
  movs r3, #0
 80002f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f8:	e001      	b.n	80002fe <LoopFillZerobss>

080002fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002fc:	3204      	adds	r2, #4

080002fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000300:	d3fb      	bcc.n	80002fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000302:	f000 f811 	bl	8000328 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000306:	f7ff ff65 	bl	80001d4 <main>

0800030a <LoopForever>:

LoopForever:
  b LoopForever
 800030a:	e7fe      	b.n	800030a <LoopForever>
  ldr   r0, =_estack
 800030c:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000310:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000314:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000318:	08000390 	.word	0x08000390
  ldr r2, =_sbss
 800031c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000320:	20000024 	.word	0x20000024

08000324 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000324:	e7fe      	b.n	8000324 <ADC1_2_IRQHandler>
	...

08000328 <__libc_init_array>:
 8000328:	b570      	push	{r4, r5, r6, lr}
 800032a:	4d0d      	ldr	r5, [pc, #52]	@ (8000360 <__libc_init_array+0x38>)
 800032c:	4c0d      	ldr	r4, [pc, #52]	@ (8000364 <__libc_init_array+0x3c>)
 800032e:	1b64      	subs	r4, r4, r5
 8000330:	10a4      	asrs	r4, r4, #2
 8000332:	2600      	movs	r6, #0
 8000334:	42a6      	cmp	r6, r4
 8000336:	d109      	bne.n	800034c <__libc_init_array+0x24>
 8000338:	4d0b      	ldr	r5, [pc, #44]	@ (8000368 <__libc_init_array+0x40>)
 800033a:	4c0c      	ldr	r4, [pc, #48]	@ (800036c <__libc_init_array+0x44>)
 800033c:	f000 f818 	bl	8000370 <_init>
 8000340:	1b64      	subs	r4, r4, r5
 8000342:	10a4      	asrs	r4, r4, #2
 8000344:	2600      	movs	r6, #0
 8000346:	42a6      	cmp	r6, r4
 8000348:	d105      	bne.n	8000356 <__libc_init_array+0x2e>
 800034a:	bd70      	pop	{r4, r5, r6, pc}
 800034c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000350:	4798      	blx	r3
 8000352:	3601      	adds	r6, #1
 8000354:	e7ee      	b.n	8000334 <__libc_init_array+0xc>
 8000356:	f855 3b04 	ldr.w	r3, [r5], #4
 800035a:	4798      	blx	r3
 800035c:	3601      	adds	r6, #1
 800035e:	e7f2      	b.n	8000346 <__libc_init_array+0x1e>
 8000360:	08000388 	.word	0x08000388
 8000364:	08000388 	.word	0x08000388
 8000368:	08000388 	.word	0x08000388
 800036c:	0800038c 	.word	0x0800038c

08000370 <_init>:
 8000370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000372:	bf00      	nop
 8000374:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000376:	bc08      	pop	{r3}
 8000378:	469e      	mov	lr, r3
 800037a:	4770      	bx	lr

0800037c <_fini>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr
